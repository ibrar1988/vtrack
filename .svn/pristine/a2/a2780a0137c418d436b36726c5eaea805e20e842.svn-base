package com.perigrine.businesscardverification;

import android.app.AlertDialog;
import android.app.ProgressDialog;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.SharedPreferences;
import android.graphics.Color;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.view.inputmethod.InputMethodManager;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.AutoCompleteTextView;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Spinner;

import com.loopj.android.http.JsonHttpResponseHandler;
import com.perigrine.Helper.APICalls;
import com.perigrine.Helper.Common;
import com.perigrine.Helper.NetworkAdapter;

import org.json.JSONObject;

import java.util.ArrayList;
import java.util.List;

import cz.msebera.android.httpclient.Header;
import cz.msebera.android.httpclient.entity.StringEntity;

import static android.content.Context.MODE_PRIVATE;

/**
 * Created by root on 7/3/17.
 */
public class VisitorWhomToMeetDetails extends Fragment implements View.OnClickListener {
    private Spinner spinner_departments;
    private EditText et_add_scannedDate, et_add_whomToMeet_email, et_add_whomTomeet_phno, et_add_whomTomeet_role;
    AutoCompleteTextView et_add_whomToMeet;
    private LinearLayout ll_add_scannedDate;
    private ArrayList<String> departmentsList;
    private String selectedDeptID, selectedDeptName;
    private Button btn_verify;
    String primary_color;
    String secondary_color;
    String logo_url;

    public VisitorWhomToMeetDetails() {
    }

    @Override
    public void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        SharedPreferences sharedPreferences = getContext().getSharedPreferences("new_theme", MODE_PRIVATE);
        primary_color =  sharedPreferences.getString("primary_Color", "#F00025");
        secondary_color = sharedPreferences.getString("secondary_Color", "#aaaaaa");
        logo_url = sharedPreferences.getString("org_Logo","");
        setHasOptionsMenu(true);
    }

    @Nullable
    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.content_visitor_whomtomeet, container, false);
        findViews(view);
        return view;
    }

    private void findViews(View view) {
        et_add_whomToMeet = (AutoCompleteTextView) view.findViewById(R.id.et_add_whomToMeet);
        et_add_whomToMeet.setBackground(APICalls.getDrawable(et_add_whomToMeet, primary_color));
        et_add_whomToMeet_email = (EditText) view.findViewById(R.id.et_add_whomToMeet_email);
        et_add_whomToMeet_email.setBackground(APICalls.getDrawable(et_add_whomToMeet_email, primary_color));
        et_add_whomTomeet_phno = (EditText) view.findViewById(R.id.et_add_whomToMeet_phno);
        et_add_whomTomeet_phno.setBackground(APICalls.getDrawable(et_add_whomTomeet_phno, primary_color));
        et_add_whomTomeet_role = (EditText) view.findViewById(R.id.et_add_whomToMeet_Emprole);
        et_add_whomTomeet_role.setBackground(APICalls.getDrawable(et_add_whomTomeet_role, primary_color));
        btn_verify = (Button) view.findViewById(R.id.btn_verify);
        btn_verify.setBackgroundColor(Color.parseColor(primary_color));
        btn_verify.setOnClickListener(this);
        ArrayAdapter<String> adapter = new ArrayAdapter<String>
                (getActivity(), android.R.layout.select_dialog_item, APICalls.getEmployeeNameList());
        et_add_whomToMeet.setThreshold(2);//will start working from first character
        et_add_whomToMeet.setAdapter(adapter);
        et_add_whomToMeet.setOnItemClickListener(new AdapterView.OnItemClickListener() {

            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long rowId) {

                //here position is your selected item id
                String selection = (String) parent.getItemAtPosition(position);
                int pos = -1;
                ArrayList<String> empNamelist = APICalls.getEmployeeNameList();
                for (int i = 0; i < empNamelist.size(); i++) {
                    if (empNamelist.get(i).equals(selection)) {
                        pos = i;
                        break;
                    }
                }
                System.out.println("Position " + pos); //check it now in Logcat

                InputMethodManager imm = (InputMethodManager) getActivity().getSystemService(
                        Context.INPUT_METHOD_SERVICE);
                imm.hideSoftInputFromWindow(getActivity().getCurrentFocus().getWindowToken(), 0);
                Log.e("selected emp name" + APICalls.getEmployeeNameList().get(pos), ":id" + APICalls.getEmployeeIDList().get(pos));
                getEmployeeDetails(APICalls.getEmployeeIDList().get(pos));

            }
        });
        et_add_scannedDate = (EditText) view.findViewById(R.id.et_add_scannedDate);
        ll_add_scannedDate = (LinearLayout) view.findViewById(R.id.ll_add_scannedDate);
        spinner_departments = (Spinner) view.findViewById(R.id.spinner_dept);
        departmentsList = new ArrayList<String>();
        try {
            departmentsList = APICalls.getcenterBasedDeptNameList(getActivity());
        } catch (Exception e) {
            e.toString();
        }
        ArrayAdapter<String> deptAdapter = new ArrayAdapter<String>(getActivity(), android.R.layout.simple_spinner_item, departmentsList);
        // Drop down layout style - list view with radio button
        deptAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        spinner_departments.setAdapter(deptAdapter);
        Log.e("selctegetDeptsIDList", ":" + APICalls.getcenterBasedDeptIDList(getActivity()));
        Log.e("selcted departmen id", ":" + APICalls.getSelectedDepartmentID(getActivity()));
        Log.e("selcted departmen id", ":" + APICalls.getcenterBasedDeptIDList(getActivity()).contains(APICalls.getSelectedDepartmentID(getActivity())));
        spinner_departments.setSelection(APICalls.getcenterBasedDeptIDList(getActivity()).indexOf(APICalls.getSelectedDepartmentID(getActivity())));


        spinner_departments.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
            @Override
            public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {
//                    Toast.makeText(getApplicationContext(),"selected item"+departmentsList.get(i),Toast.LENGTH_SHORT).show();
                try {
                    selectedDeptID = APICalls.getcenterBasedDeptIDList(getActivity()).get(i);
                    selectedDeptName = APICalls.getcenterBasedDeptNameList(getActivity()).get(i);

                } catch (Exception e) {
                    e.printStackTrace();
                }
            }

            @Override
            public void onNothingSelected(AdapterView<?> adapterView) {

            }
        });
    }

    private void getEmployeeDetails(String employeeID) {
        APICalls.employeeID = employeeID;
        final ProgressDialog pDialog = new ProgressDialog(getActivity());
        pDialog.setMessage("Loading...");
        pDialog.setCancelable(false);
        if(!pDialog.isShowing())
        pDialog.show();
        StringEntity entity = null;
        try {
            JSONObject js = new JSONObject();
            js.put("id", employeeID);
            System.out.println("js::" + js.toString());
            entity = new StringEntity(js.toString());
            List<Header> headers = NetworkAdapter.getHeaders(getActivity());
            JsonHttpResponseHandler reponseHandler = new JsonHttpResponseHandler() {

                @Override
                public void onSuccess(int statusCode, Header[] headers,
                                      JSONObject response) {
                    System.out.println("employee data by ID-response" + response);
                    try {
                        if(pDialog.isShowing()){
                            pDialog.dismiss();
                        }
                        if (response.getString("statusCode").toString().trim().equals("200")) {
                            //Code for getting employee list
                            et_add_whomTomeet_phno.setText(response.getJSONObject("data").getString("empMobile"));
                            et_add_whomToMeet_email.setText(response.getJSONObject("data").getString("empEmail"));
                            et_add_whomTomeet_role.setText(response.getJSONObject("data").getString("empRole"));

                        } else if (response.getString("statusCode").toString().trim().equals("404")) {
                            Common.gotoLoginPage(getActivity());
                        } else {
                            new AlertDialog.Builder(getActivity())
                                    .setTitle("Business card Verification")
                                    .setMessage("Something is not right here now, Please feel free to close the app and come back later")
                                    .setIcon(R.drawable.menu_app_icon)
                                    .setPositiveButton("OK", new DialogInterface.OnClickListener() {
                                        public void onClick(DialogInterface dialog, int which) {
                                        }
                                    })
                                    .show();
                        }
                    } catch (Exception e) {

                    }
                }

                @Override
                public void onFailure(int statusCode, Header[] headers, String responseString, Throwable throwable) {
                    super.onFailure(statusCode, headers, responseString, throwable);
                    if(pDialog.isShowing()){
                        pDialog.dismiss();
                    }
                    System.out.println("response" + responseString);
                    Intent in = new Intent(getActivity(), HomeVistorsList.class);
                    startActivity(in);
                }

                @Override
                public void onFailure(int statusCode, Header[] headers,
                                      Throwable throwable, JSONObject errorResponse) {
                    if(pDialog.isShowing()){
                        pDialog.dismiss();
                    }
                    System.out.println("errorResponse" + errorResponse);
                    super.onFailure(statusCode, headers, throwable,
                            errorResponse);

                }
            };

            NetworkAdapter.postWithHttpHeader(getActivity(), APICalls.URL_getEmployeeWithID,
                    entity, "application/json", reponseHandler, headers);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    @Override
    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
        super.onCreateOptionsMenu(menu, inflater);
        MenuItem item = menu.findItem(R.id.action_camera);
        item.setVisible(false);
        MenuItem item1 = menu.findItem(R.id.action_home);
        item.setVisible(false);

    }

    @Override
    public void onClick(View view) {
        if(view.getId()==R.id.btn_verify)
        {
            VisitorDetailsForm.vm.setWhomToMeet(et_add_whomToMeet.getText().toString().trim());
            VisitorDetailsForm.vm.setEmpEmail(et_add_whomToMeet_email.getText().toString().trim());
            VisitorDetailsForm.vm.setEmpPhno(et_add_whomTomeet_phno.getText().toString().trim());
            VisitorDetailsForm.vm.setEmpRole(et_add_whomTomeet_role.getText().toString().trim());
            VisitorDetailsForm.vm.setDeptID(selectedDeptID);
            VisitorDetailsForm.vm.setDeptName(selectedDeptName);
            APICalls.vm = VisitorDetailsForm.vm;
            Intent intent = new Intent(getActivity(), VisitorDetailsDisplay.class);
            getActivity().startActivity(intent);
        }
    }
}
