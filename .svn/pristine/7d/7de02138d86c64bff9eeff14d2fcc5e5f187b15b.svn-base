package com.perigrine.businesscardverification;

import android.content.Intent;
import android.content.SharedPreferences;
import android.graphics.Color;
import android.print.PrintAttributes;
import android.print.PrintDocumentAdapter;
import android.print.PrintJob;
import android.print.PrintManager;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.support.v7.widget.Toolbar;
import android.view.KeyEvent;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.webkit.WebView;
import android.webkit.WebViewClient;
import android.widget.Button;
import android.widget.ImageView;

import com.perigrine.Helper.Common;
import com.perigrine.Helper.PrintJobMonitorService;
import com.squareup.picasso.Picasso;

public class PrintActivity extends AppCompatActivity implements View.OnClickListener {

    private WebView wv_print;
    private Button btn_print;
    private PrintManager mgr = null;
    SharedPreferences sharedPreferences;
    String htmlDocument;
    String primary_color;
    String logo_url;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_print);

        sharedPreferences = getSharedPreferences("new_theme", MODE_PRIVATE);
        logo_url = sharedPreferences.getString("org_Logo", "");

        primary_color =  sharedPreferences.getString("primary_Color", "#F00025");
        wv_print = (WebView) findViewById(R.id.wv_print);
        btn_print = (Button) findViewById(R.id.btn_print);
        btn_print.setOnClickListener(this);
        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        toolbar.setBackgroundColor(Color.parseColor(primary_color));
        toolbar.setLogo(Common.getOrganization_logo());
        setSupportActionBar(toolbar);
        mgr = (PrintManager) getSystemService(PRINT_SERVICE);

        String orglogo=sharedPreferences.getString("org_Logo", "");
        htmlDocument = "<html><body><style>" +
                "img{float:left}" +
                "h1{text-align: center;}" +
                "</style> <div style='border: 1px solid black;padding : 15px;width:60%; margin:auto;'>" +
                "<header>" +
                "<img src=" + orglogo + " style=width:80px;height:80px;>" +
                "<h1> Visitor </h1>" +
                "</header>" +
                "<table style=width:100%>" +
                "  <tr>" +
                "    <td>Visitor Name:</td>" +
                "    <td>" + VisitorDetailsForm.vm.getName()+ "</td>" +
                "  </tr>" +
                "  <tr>" +
                "    <td>Visitor Company Name:</td>" +
                "    <td>"+VisitorDetailsForm.vm.getCompany()+"</td>" +
                "  </tr>" +
                "  <tr>" +
                "    <td>Date of visit:</td>" +
                "    <td>"+ Common.getCurrentDateTime("MMM dd, yyyy hh:mm:ss a")+"</td>" +
                "  </tr>" +
                "   <tr>" +
                "    <td>Host Name:</td>" +
                "    <td>"+VisitorDetailsForm.vm.getHostName()+"</td>" +
                "  </tr>" +
                "   <tr>" +
                "    <td>Badge Color</td>" +
                "    <td>"+getIntent().getStringExtra("badgeColor")+"</td>" +
                "  </tr>" +
                "</table> </div>" +
                "</body>" +
                "</html>";
        wv_print.loadData(htmlDocument,"text/HTML", "UTF-8");
    }

    @Override
    public void onClick(View view) {
        if (view == btn_print) {
            printWebPage();
        }
    }

    private void printWebPage() {
        WebView print = prepPrintWebView("Web Page");
        print.loadDataWithBaseURL(null, htmlDocument, "text/HTML", "UTF-8", null);
    }


    private WebView prepPrintWebView(final String name) {
        WebView result = getWebView();

        result.setWebViewClient(new WebViewClient() {
            @Override
            public void onPageFinished(WebView view, String url) {
                print(name, view.createPrintDocumentAdapter(),
                        new PrintAttributes.Builder().build());
            }
        });

        return (result);
    }

    private WebView getWebView() {
        if (wv_print == null) {
            wv_print = new WebView(this);
        }
        return (wv_print);
    }

    private PrintJob print(String name, PrintDocumentAdapter adapter,
                           PrintAttributes attrs) {
        startService(new Intent(this, PrintJobMonitorService.class));
        return (mgr.print(name, adapter, attrs));
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.menu_home, menu);
        return super.onCreateOptionsMenu(menu);
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        if (item.getItemId() == R.id.action_home) {
            Intent in = new Intent(this, HomeVistorsList.class);
            startActivity(in);
        }
        return super.onOptionsItemSelected(item);
    }

    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {
        if (keyCode == KeyEvent.KEYCODE_BACK) {
            return false;
        }
        return super.onKeyDown(keyCode, event);
    }
}
